Problem statement
For a given two-dimensional integer array/list of size (N x M), print it in a spiral form. That is, you need to print in the order followed for every iteration:

a. First row(left to right)
b. Last column(top to bottom)
c. Last row(right to left)
d. First column(bottom to top)
 Mind that every element will be printed only once.


Constraints :
1 <= t <= 10^2
0 <= N <= 10^3
0 <= M <= 10^3
Time Limit: 1sec
Sample Input 1:
1
4 4 
1 2 3 4 
5 6 7 8 
9 10 11 12 
13 14 15 16
Sample Output 1:
1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10 
Sample Input 2:
2
3 3 
1 2 3 
4 5 6 
7 8 9
3 1
10
20
30
Sample Output 2:
1 2 3 6 9 8 7 4 5 
10 20 30 


-------------------------------------------------------------------------------------------



public class Solution {

	public static void spiralPrint(int matrix[][]){ 
		int top =0 ;
		int bottom =matrix.length ;

		if(bottom ==0){
			return;
		}
		bottom--;

		int left = 0;
		int right =matrix[0].length ;
		right--;

		while(left <= right){

			for(int i=left ; i<=right; i++){
				System.out.print(matrix[top][i] + " ");
			}

			top++; 

			for(int i = top ; i<=bottom ;i++){
				System.out.print(matrix[i][right]+" ");
			}

			right--;

			if(top<=bottom){

				for(int i=right; i>=left ; i--){
					System.out.print(matrix[bottom][i] + " ");
				}
			}

			bottom--;

			if(left<=right){

				for(int i=bottom; i>=top; i--){
					System.out.print(matrix[i][left] + " ");
				}
			}

			left++;
		}

	}
}